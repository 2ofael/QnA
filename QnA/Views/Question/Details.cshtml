@using System.Security.Claims
@using GlobalEntity.Models
@model GlobalEntity.ViewModels.QuestionViewModel

@{
    ViewData["Title"] = "Details Question";
}


<div class="container mx-5">
    @if (TempData.ContainsKey("SuccessMessage"))
    {
        <div class="alert alert-success" role="alert">
            @TempData["SuccessMessage"]
        </div>
    }
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@Html.Raw(Model.Title)</h5>
                    <p class="card-text">@Html.Raw(Model.Description)</p>
                    <p class="card-text"><small class="text-muted">Posted by: @Model.Student.UserName</small></p>
                    <p class="card-text"><small class="text-muted">Id Card: @Model.Student.IdCardNumber</small></p>
                    <p class="card-text"><small class="text-muted">Posted on: @Model.PostedDate.ToShortDateString()</small></p>
                </div>
                <div class="card-footer">
                    <h5>Actions</h5>
                    @if (User.Identity.IsAuthenticated && (User.IsInRole("Moderator") || (Model.StudentId == User.FindFirst(ClaimTypes.NameIdentifier).Value)))
                    {
                        <form asp-action="EditQuestion" asp-controller="Question" method="post" class="d-inline">
                            <input type="hidden" name="id" value="@Model.Id" />
                            <button type="submit" class="btn btn-secondary">Edit</button>
                        </form>

                        <form asp-action="Delete" asp-controller="Question" method="post" class="d-inline">
                            <input type="hidden" name="id" value="@Model.Id" />
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    }
                    @if (User.Identity.IsAuthenticated && (User.IsInRole("Teacher") || (Model.StudentId == User.FindFirst(ClaimTypes.NameIdentifier).Value)))
                    {
                        <a asp-controller="Answer" asp-action="Create" asp-route-questionId="@Model.Id" class="btn btn-primary">Reply</a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@if(Model.Answers.Count == 0)
{
    <h3 class="mx-5 mt-3">No Answers</h3>
}
else{
<h3 class="mx-5 mt-2">Teachers Answers</h3>
<div class="container mx-5">
    <div class="row">
        
        @foreach (var answer in Model.Answers)
        {
            <div class="col-md-6 mt-2">
                <div class="card mb-3">
                    <div class="card-body">
                        
                        <h5 class="card-title">@Html.Raw(Truncate(answer.Title, 20))</h5>
                        <p class="card-text">@Html.Raw(Truncate(answer.Description, 20))</p>
                        <p class="card-text"><small class="text-muted">Posted on: @answer.PostedDate.ToShortDateString()</small></p>
                        <a asp-controller="Answer" asp-action="Details" asp-route-Id="@answer.Id" class="btn btn-primary read-more">Read More</a>
                    </div>
                </div>
            </div>
        }
    
    </div>
</div>
}
@functions {
    string Truncate(string input, int length)
    {
        if (input.Length <= length)
        {
            return input;
        }
        return input.Substring(0, length) + "...";
    }
}
